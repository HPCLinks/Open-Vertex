#!/bin/bash
#* Copyright (c) 2011  by HPC Links 
#* 
#* Permission to use, copy, modify, and distribute this software for any 
#* purpose with or without fee is hereby granted, provided that the above 
#* copyright notice and this permission notice appear in all copies. 
#* 
#* THE SOFTWARE IS PROVIDED "AS IS" AND HPC Links DISCLAIMS ALL WARRANTIES 
#* WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF 
#* MERCHANTABILITY AND FITNESS.  IN NO EVENT SHALL HPC Links BE LIABLE FOR 
#* ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES 
#* WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN 
#* ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT 
#* OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#* 
#*   HPC Links 
#*   B-8, Second Floor 
#*   May Fair Garden 
#*   New Delhi, India 110016

#
# vertex      Start Vertex
#
# chkconfig: 2345 80  75
# description:  Starts and stops Vertex

### BEGIN INIT INFO
# Provides: vertex
# Required-Start:
# Required-Stop:
# Default-Start: 
# Default-Stop: 
# Short-Description: start and stop vertex
# Description: Start, stop and stop vertex
### END INIT INFO

# Source function library.
. /etc/init.d/functions
if [ -f /etc/sysconfig/vex ] ; then
   . /etc/sysconfig/vex
else
   echo "ERROR: $0  Missing /etc/sysconfig/vex"
   exit 1
fi

HTTPD_LANG=${HTTPD_LANG-"C"}

ARCH=`uname -p`
#USER NAE
USER=`id -u`
VEXVAR="/var/vertex"
VEXCONFFILE="$VEXVAR/etc/vex.conf"
VEX_NS_CONF="$VEXVAR/etc/namespace.conf"
VEX_NS_CMDS="$VEXVAR/etc/namespace.cmds"
VEX_SYSROOT="$VEXSYSROOT/Linux/x86_64"
VEXMNT="/mnt/sandbox"
VEXSOCKET="/tmp/vex_hsched"

VEXSCHEDULERNAME="vex_hsched"
VEXSCHEDULER="$VEXHOME/bin/$VEXSCHEDULERNAME"

#Availibility Deamon
VEXMONNAME="vexmon.sh"
VEXMON="$VEXHOME/bin/$VEXMONNAME"

XCPUNAME="xcpufs"
XCPU="$VEXHOME/sbin/$XCPUNAME"

add_namespace ()
{
	echo "Adding namespace specified by user from file $VEX_NS_CONF"
	echo "# This is a autogenerated file. Do not modify !" > $VEX_NS_CMDS
	echo "# Note that if the first character in the line is space, newline, tab, etc. then that line is ignored" >> $VEX_NS_CMDS
	echo "unshare" >> $VEX_NS_CMDS
	echo "import \$XCPUTSADDR /mnt/term" >> $VEX_NS_CMDS
	echo "bind /mnt/term/\$XCPUARCHDIR /mnt/sandbox" >> $VEX_NS_CMDS

	# Read configuration file for namespace
	for i in `cat $VEX_NS_CONF` ; do
		echo $i
		if [ ! -d $i ] ; then
			echo "Creating dir $i"
			mkdir -p $i
		fi

		if [ ! -d $VEX_SYSROOT$i ] ; then
			echo "Creating dir $VEX_SYSROOT$i"
			mkdir -p $VEX_SYSROOT$i
		fi

		if [ ! -d $VEXMNT$i ] ; then
			echo "Creating dir $VEXMNT$i"
			mkdir -p $VEXMNT$i
		fi
		echo "bind /mnt/term$i $VEXMNT$i" >> $VEX_NS_CMDS
	done	

	echo "bind /dev /mnt/sandbox/dev" >> $VEXVAR/etc/namespace.cmds
	echo "bind /proc /mnt/sandbox/proc" >> $VEXVAR/etc/namespace.cmds
	echo "bind /sys /mnt/sandbox/sys" >> $VEXVAR/etc/namespace.cmds
	echo "chroot /mnt/sandbox" >> $VEXVAR/etc/namespace.cmds

}

start ()
 {
#check if binfmt is mounted and if not mounting the binfmt
#check if Conf file is there

if [ `id -u` != "0" ]; then
   echo "You need to be Root to run this script"
fi

if test -z "`cat /proc/filesystems | grep 9p `"
then
 echo "Loading 9p kernel module"
 modprobe 9p
else
 echo " 9p kernel module is already loaded"
 
fi

if [ ! -f $XCPU ] ; then

echo "Please have $XCPUNAME installed in $XCPU"
exit 1
fi

echo -n "Starting VERTEX "
if [ ! -f $VEXCONFFILE  ]; then
echo  "PLEASE have a config file "
exit 1 
fi

echo "Attempting to cleanup running processes "
killall  $VEXMONNAME > /dev/null 2>&1
killall  $VEXSCHEDULERNAME  >/dev/null 2>&1
killall  $XCPUNAME >/dev/null 2>&1

echo starting $XCPU
$XCPU 

echo starting registration
echo -1 >/proc/sys/fs/binfmt_misc/status
echo  "Registering the rte binary type"
echo ":ppc:M::\x7fELF\x01\x02\x01\x00::$VEXHOME/bin/vex_loaderbin:" >/proc/sys/fs/binfmt_misc/register
echo ":ppc64:M::\x7fELF\x02\x02\x01\x00::$VEXHOME/bin/vex_loaderbin:" >/proc/sys/fs/binfmt_misc/register
# Register file type .rte to be started with vex_loader
echo ":TAGGEDEXE:E::rte::$VEXHOME/bin/vex_loaderbin:" >/proc/sys/fs/binfmt_misc/register
echo  "Successfully registered the rte binary type"


echo  "Starting Vertex Scheduler daemon"
nohup  $VEXSCHEDULER -d $VEXCONFFILE -s 1 2>&1 > /var/log/vexsched &
echo  "Successfully started VexScheduler daemon"
#  Sleep for enough time so the scheduler will create the socket
sleep 5
chmod 777 $VEXSOCKET

echo  "Starting Vertex Monitor"
nohup $VEXMON 2>&1 > /var/log/vexmon &
echo  "Successfully Started Vertex Monitor "

# Add namespace
add_namespace

#  For now let all users use xrx
$VEXHOME/bin/openxrx


}

stop () 
{
echo  "Stopping Vertex Monitor "
killall  $VEXMONNAME > /dev/null 2>&1
echo  "Stopping Vertex Scheduler "
killall  $VEXSCHEDULERNAME  >/dev/null 2>&1
echo  "Stopping $XCPUNAME"
killall  $XCPUNAME >/dev/null 2>&1
echo  "Stopping/unregistering  binfmt_misc"
echo -1 >/proc/sys/fs/binfmt_misc/status
echo  "Stopping xcpufs.static on all compute nodes"

}


#See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
 restart)
        stop
        start 
        ;;
   *) 
       echo $"Usage: $prog {start|stop|restart)" 

esac

exit 1 



